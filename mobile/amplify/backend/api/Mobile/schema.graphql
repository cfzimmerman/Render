type PostViewTracker @model @auth(rules: [{allow: public}]) {
  id: ID!
  postsID: ID @index(name: "byPosts") @index(name: "postViewByPostID", queryField: "postViewByPostID", sortKeyFields: ["viewerID"]) 
  Posts: Posts @belongsTo
  viewerID: ID @index(name: "byUsers")
  Users: Users @belongsTo
}

type UserRelationships @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: String!
  receivercognitosub: String @index(name: "relationshipsByReceiverDate", queryField: "relationshipsByReceiverDate", sortKeyFields: ["createdAt"])
  sendercognitosub: String @index(name: "relationshipsBySenderDate", queryField: "relationshipsBySenderDate", sortKeyFields: ["createdAt"]) @index(name: "verifyAddedUser", queryField: "verifyAddedUser", sortKeyFields: ["receivercognitosub"]) @index(name: "addedUsersByCurrentUser", queryField: "addedUsersByCurrentUser")
  usersID: ID! @index(name: "byUsers")
  Users: Users @belongsTo(fields: ["usersID"])
}

type Posts @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  aspectratio: Float
  cognitosub: String! @index(name: "postsByCreatedDate", queryField: "postsByCreatedDate", sortKeyFields: ["createdAt"]) @index(name: "postsByPostedDate", queryField: "postsByPostedDate", sortKeyFields: ["publicpostdate"]) @index(name: "postsByContentDate", queryField: "postsByContentDate", sortKeyFields: ["contentdate"])
  contentdate: AWSDateTime
  contentkey: String @index(name: "postsByContentKey", queryField: "postsByContentKey")
  contenttype: String
  createdAt: String!
  posttext: String
  publicpost: Boolean 
  publicpostdate: AWSDateTime
  sizeinbytes: Int
  thumbnailkey: String
  type: String @index(name: "postsByPublicDate", queryField: "postsByPublicDate", sortKeyFields: ["publicpostdate"] )
  usersID: ID! @index(name: "byUsers")
  Users: Users @belongsTo(fields: ["usersID"])
  PostViewTrackers: [PostViewTracker] @hasMany(indexName: "byPosts", fields: ["id"])
}

type Users @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  acceptedtos: Boolean
  addedcount: Int
  addedmecount: Int
  birthday: AWSDate
  cognitosub: String @index(name: "userByCognitosub", queryField: "userByCognitosub")
  displayname: String
  email: AWSEmail @index(name: "userByEmail", queryField: "userByEmail")
  emailconfirmed: Boolean
  firstvaultupload: Boolean
  fullyauthenticated: Boolean
  gamertag: String @index(name: "userByGamertag", queryField: "userByGamertag")
  mostrecentpublicpost: AWSDateTime
  pfp: String
  storagesizeinbytes: Float
  type: String @index(name: "searchByGamertag", sortKeyFields: ["gamertag"], queryField: "searchByGamertag")
  Posts: [Posts] @hasMany(indexName: "byUsers", fields: ["id"])
  PostViewTrackers: [PostViewTracker] @hasMany(indexName: "byUsers", fields: ["id"])
  UserRelationships: [UserRelationships] @hasMany(indexName: "byUsers", fields: ["id"])
}
 